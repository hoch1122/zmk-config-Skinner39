#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        aa {
            bindings = <&bt BT_CLR>;
            key-positions = <20 29>;
            timeout-ms = <20>;
            require-prior-idle-ms = <20>;
            layers = <4>;
        };

        ss {
            bindings = <&bootloader>;
            key-positions = <38 9 19>;
        };

        sr {
            bindings = <&bootloader>;
            key-positions = <0 10 30>;
        };
    };

    macros {
        kore: pass {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N) &kp S &kp O &kp C &kp C &kp E &kp R &kp H>;
            label = "PASS";
        };

        kaiten: kaiten {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mkp MCLK>,
                <&macro_wait_time 200>,
                <&mkp RCLK>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp MCLK &mkp RCLK>;

            label = "KAITEN";
        };

        zoom: zoom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mkp MCLK>,
                <&macro_wait_time 100>,
                <&mkp RCLK>,
                <&macro_release>,
                <&mkp RCLK>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp MCLK>;

            label = "ZOOM";
        };
    };

    behaviors {
        a_shift: a_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "A_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <300>;
        };

        mid: mid {
            compatible = "zmk,behavior-hold-tap";
            label = "MID";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            bindings = <&mkp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
  &kp Q                  &kp W         &kp E                &kp R             &kp T                                              &kp Y          &kp U      &kp I        &kp O       &kp P
  &a_shift LEFT_SHIFT A  &kp S         &kp D                &lt 4 F           &a_shift LCTRL G                                   &kp H          &mkp LCLK  &mid MCLK K  &mkp RCLK   &lt 3 ENTER
  &kp Z                  &kp X         &kp C                &kp V             &kp B                                              &kp N          &kp M      &kp COMMA    &kp PERIOD  &kp MINUS
  &kp LG(LEFT)           &kp LEFT_ALT  &mt LEFT_WIN ESCAPE  &lt 1 LANGUAGE_2  &lt 2 INT_KANA    &lt 3 F10  &mt INT_HENKAN SPACE  &kp BACKSPACE                                      &lt 1 RG(RIGHT)
            >;
        };

        SYMBOL {
            bindings = <
  &kp QUESTION      &trans         &kp INT_YEN  &trans  &trans                    &kp PERCENT    &kp RS(INT_RO)  &trans         &trans  &kp EQUAL
  &kp LEFT_BRACKET  &kp LG(LS(S))  &kp DOLLAR   &trans  &trans                    &kp PAGE_UP    &kp J           &kp LS(EQUAL)  &kp L   &trans
  &trans            &trans         &trans       &trans  &kp EXCL                  &kp PAGE_DOWN  &trans          &trans         &trans  &trans
  &trans            &trans         &trans       &trans  &trans    &trans  &trans  &kp DEL                                               &trans
            >;
        };

        NUM {
            bindings = <
  &kp TAB         &trans     &kp UP_ARROW    &kp LC(C)  &kp LC(V)                     &kp FSLH   &kp N7  &kp N8  &kp N9  &kp RS(APOS)
  &kp LEFT_SHIFT  &kp LEFT   &kp DOWN_ARROW  &kp RIGHT  &kp LCTRL                     &kp MINUS  &kp N4  &kp N5  &kp N6  &kp KP_PLUS
  &kp LC(Z)       &kp LC(X)  &kp LC(C)       &kp LC(V)  &kp DEL                       &kp DOT    &kp N1  &kp N2  &kp N3  &kp APOS
  &trans          &trans     &trans          &trans     &trans     &trans  &kp UNDER  &kp N0                             &kp KP_NUMLOCK
            >;
        };

        MOUSE {
            bindings = <
  &kp LS(F3)     &trans        &kp LS(UP_ARROW)    &trans         &trans                             &trans         &trans   &trans    &trans  &trans
  &kp LS(LC(B))  &kp LS(LEFT)  &kp LS(DOWN_ARROW)  &kp LS(RIGHT)  &kp LC(PG_UP)                      &kp PG_UP      &kaiten  &mkp MB3  &zoom   &trans
  &trans         &trans        &trans              &trans         &kp LC(PAGE_DOWN)                  &kp PAGE_DOWN  &trans   &trans    &trans  &trans
  &kp LC(B)      &trans        &trans              &trans         &trans             &trans  &trans  &trans                                    &kp LS(LC(B))
            >;
        };

        FUNCTION {
            bindings = <
  &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &kore       &kp F7  &kp F8  &kp F9  &kp LG(TAB)
  &kp LC(LG(LEFT))  &trans        &trans        &trans        &trans                        &bt BT_PRV  &kp F4  &kp F5  &kp F6  &kp RC(LG(RIGHT))
  &kp LA(LEFT)      &trans        &trans        &trans        &trans                        &bt BT_NXT  &kp F1  &kp F2  &kp F3  &kp RA(RIGHT)
  &kp LC(Z)         &trans        &trans        &trans        &trans        &trans  &trans  &trans                              &kp RC(Y)
            >;
        };

        scroll_layer {
            bindings = <
  &kp TAB         &trans     &kp UP_ARROW    &kp LC(C)        &kp LC(V)                     &kp SLASH   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RS(APOS)
  &kp LEFT_SHIFT  &kp LEFT   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LCTRL                     &kp MINUS   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_PLUS
  &kp LC(Z)       &kp LC(X)  &kp LC(C)       &kp LC(V)        &kp DEL                       &kp PERIOD  &kp N1        &kp NUMBER_2  &kp NUMBER_3  &kp APOS
  &trans          &trans     &trans          &trans           &trans     &trans  &kp UNDER  &kp N0                                                &kp KP_NUMLOCK
            >;
        };

        snipe_layer {
            bindings = <
  &trans  &trans  &trans  &trans  &bootloader                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans                          &trans
            >;
        };

        customizable_layer {
            bindings = <
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        layer_8 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
