#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        a {
            bindings = <&mkp RCLK>;
            key-positions = <17 18>;
            layers = <0>;
            require-prior-idle-ms = <20>;
            timeout-ms = <20>;
        };

        aa {
            bindings = <&bt BT_CLR>;
            key-positions = <38 30>;
            timeout-ms = <20>;
            require-prior-idle-ms = <20>;
            layers = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &lt 5 Q       &kp W         &kp E                &kp R             &kp T                                            &kp Y          &kp U      &kp I      &kp O       &kp P
  &kp A         &kp S         &kp D                &lt 3 F           &kp G                                            &kp H          &mkp LCLK  &kp K      &kp L       &kp ENTER
  &kp Z         &kp X         &kp C                &kp V             &kp B                                            &kp N          &kp M      &kp COMMA  &kp PERIOD  &kp MINUS
  &kp LG(LEFT)  &kp LEFT_ALT  &mt LEFT_WIN ESCAPE  &lt 2 LANGUAGE_2  &lt 1 INT_KANA  &lt 4 F10  &mt INT_HENKAN SPACE  &kp BACKSPACE                                    &kp RG(RIGHT)
            >;
        };

        number_layer {
            bindings = <
  &kp TAB         &trans         &kp UP_ARROW    &kp LC(C)        &kp LC(V)                     &kp SLASH   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RS(APOS)
  &kp LEFT_SHIFT  &kp LEFT       &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LCTRL                     &kp MINUS   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_PLUS
  &kp LC(Z)       &kp LC(EQUAL)  &kp LC(C)       &kp LC(V)        &kp DEL                       &kp PERIOD  &kp N1        &kp NUMBER_2  &kp NUMBER_3  &kp APOS
  &trans          &trans         &trans          &trans           &trans     &trans  &kp UNDER  &kp N0                                                &kp KP_NUMLOCK
            >;
        };

        symbol_layer {
            bindings = <
  &kp QUESTION      &trans         &kp INT_YEN  &trans  &trans                    &kp PERCENT  &kp RS(INT_RO)  &trans         &trans  &kp EQUAL
  &kp LEFT_BRACKET  &kp LG(LS(S))  &kp DOLLAR   &trans  &trans                    &trans       &kp J           &kp LS(EQUAL)  &trans  &trans
  &trans            &trans         &trans       &trans  &kp EXCL                  &trans       &trans          &trans         &trans  &trans
  &trans            &trans         &trans       &trans  &trans    &trans  &trans  &trans                                              &trans
            >;
        };

        function_layer {
            bindings = <
  &trans     &trans  &trans  &trans  &trans                  &trans      &kp F7  &kp F8  &kp F9  &trans
  &kp LC(Z)  &trans  &trans  &trans  &trans                  &bt BT_PRV  &kp F4  &kp F5  &kp F6  &kp RC(Y)
  &trans     &trans  &trans  &trans  &trans                  &bt BT_NXT  &kp F1  &kp F2  &kp F3  &trans
  &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans                              &trans
            >;
        };

        mouse_layer {
            bindings = <
  &trans  &trans  &trans  &trans  &trans                  &trans         &trans     &trans     &trans     &trans
  &trans  &trans  &trans  &trans  &trans                  &kp PAGE_UP    &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans
  &trans  &trans  &trans  &trans  &trans                  &kp PAGE_DOWN  &trans     &trans     &trans     &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                          &trans
            >;
        };

        scroll_layer {
            bindings = <
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        snipe_layer {
            bindings = <
  &trans  &trans  &trans  &trans  &bootloader                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans                          &trans
            >;
        };

        customizable_layer {
            bindings = <
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
